---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: myesi
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          ports:
            - containerPort: {{.Values.postgres.port | default 5432}}
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: '{{ .Values.postgres.resources.requests.memory | default "256Mi" }}'
              cpu: '{{ .Values.postgres.resources.requests.cpu | default "250m" }}'
            limits:
              memory: '{{ .Values.postgres.resources.limits.memory | default "512Mi" }}'
              cpu: '{{ .Values.postgres.resources.limits.cpu | default "500m" }}'
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: '{{ .Values.postgres.storage.size | default "1Gi" }}'
